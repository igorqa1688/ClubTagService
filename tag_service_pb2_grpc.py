# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import tag_service_pb2 as tag__service__pb2

GRPC_GENERATED_VERSION = '1.65.2'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in tag_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class TagServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateClubTag = channel.unary_unary(
                '/tag_service.TagService/CreateClubTag',
                request_serializer=tag__service__pb2.CreateClubTagRequest.SerializeToString,
                response_deserializer=tag__service__pb2.CreateClubTagResponse.FromString,
                _registered_method=True)
        self.UpdateClubTag = channel.unary_unary(
                '/tag_service.TagService/UpdateClubTag',
                request_serializer=tag__service__pb2.TagModel.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.RemoveTag = channel.unary_unary(
                '/tag_service.TagService/RemoveTag',
                request_serializer=tag__service__pb2.RemoveTagRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetClubTags = channel.unary_unary(
                '/tag_service.TagService/GetClubTags',
                request_serializer=tag__service__pb2.GetClubTagsRequest.SerializeToString,
                response_deserializer=tag__service__pb2.TagList.FromString,
                _registered_method=True)
        self.GetTag = channel.unary_unary(
                '/tag_service.TagService/GetTag',
                request_serializer=tag__service__pb2.GetTagRequest.SerializeToString,
                response_deserializer=tag__service__pb2.TagModel.FromString,
                _registered_method=True)


class TagServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateClubTag(self, request, context):
        """
        Создать тэг в клубе
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClubTag(self, request, context):
        """
        Обновить тэг в клубе (имя и цвет)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTag(self, request, context):
        """
        Удалить тэг
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClubTags(self, request, context):
        """
        Получить тэги клуба
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTag(self, request, context):
        """
        Получить тэг
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TagServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateClubTag': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateClubTag,
                    request_deserializer=tag__service__pb2.CreateClubTagRequest.FromString,
                    response_serializer=tag__service__pb2.CreateClubTagResponse.SerializeToString,
            ),
            'UpdateClubTag': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClubTag,
                    request_deserializer=tag__service__pb2.TagModel.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RemoveTag': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTag,
                    request_deserializer=tag__service__pb2.RemoveTagRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetClubTags': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClubTags,
                    request_deserializer=tag__service__pb2.GetClubTagsRequest.FromString,
                    response_serializer=tag__service__pb2.TagList.SerializeToString,
            ),
            'GetTag': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTag,
                    request_deserializer=tag__service__pb2.GetTagRequest.FromString,
                    response_serializer=tag__service__pb2.TagModel.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tag_service.TagService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('tag_service.TagService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TagService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateClubTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tag_service.TagService/CreateClubTag',
            tag__service__pb2.CreateClubTagRequest.SerializeToString,
            tag__service__pb2.CreateClubTagResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateClubTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tag_service.TagService/UpdateClubTag',
            tag__service__pb2.TagModel.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tag_service.TagService/RemoveTag',
            tag__service__pb2.RemoveTagRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetClubTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tag_service.TagService/GetClubTags',
            tag__service__pb2.GetClubTagsRequest.SerializeToString,
            tag__service__pb2.TagList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/tag_service.TagService/GetTag',
            tag__service__pb2.GetTagRequest.SerializeToString,
            tag__service__pb2.TagModel.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
